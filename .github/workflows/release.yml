name: Release Builder (Dynamic, Static, Cosmo, Docker)

on:
  workflow_dispatch:
  release:
    types: [created]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: gcc
      run: make
    - name: Upload release
      if: github.event_name != 'pull_request'
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            build/dhtd
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        overwrite: true  
        
  build-static:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: gcc
      run: make
      env:
          CFLAGS: -static
    - run: cp build/dhtd build/dhtd-static
    - name: Upload release
      if: github.event_name != 'pull_request'
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            build/dhtd-static
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        overwrite: true   

  build-cosmo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: cosmopolitan
    - uses: bjia56/setup-cosmocc@main
      with:
        version: "latest"
    - name: cosmocc
      env:
          FEATURES: cli
          CC: cosmocc
          CXX: cosmoc++
          PLATFORM: cosmo
      run: make
    - run: cp build/dhtd build/dhtd-cosmo
    - name: Upload release
      if: github.event_name != 'pull_request'
      uses: boxpositron/upload-multiple-releases@1.0.7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_config: |
            build/dhtd-cosmo
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        overwrite: true   

  docker:
    needs: build-static
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max   
